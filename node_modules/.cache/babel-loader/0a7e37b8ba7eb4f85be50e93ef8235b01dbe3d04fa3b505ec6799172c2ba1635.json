{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\youtube-clone\\\\src\\\\components\\\\VideoCard.jsx\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\nimport { CheckCircle } from \"@mui/icons-material\";\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCard = ({\n  video: {\n    id: {\n      videoId\n    },\n    snippet\n  }\n}) => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : demoVideoUrl,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: 358,\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = VideoCard;\nexport default VideoCard;\nvar _c;\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["Link","Typography","Card","CardContent","CardMedia","CheckCircle","demoThumbnailUrl","demoVideoUrl","demoVideoTitle","demoChannelUrl","demoChannelTitle","jsxDEV","_jsxDEV","VideoCard","video","id","videoId","snippet","_snippet$thumbnails","_snippet$thumbnails$h","children","to","image","thumbnails","high","url","alt","title","sx","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/youtube-clone/src/components/VideoCard.jsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { Typography, Card, CardContent, CardMedia } from \"@mui/material\";\r\nimport { CheckCircle } from \"@mui/icons-material\";\r\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\r\n\r\nconst VideoCard = ({ video: { id: { videoId }, snippet } }) => {\r\n\r\n    return (\r\n        <Card>\r\n            <Link to={videoId ? `/video/${videoId}` : demoVideoUrl}>\r\n                <CardMedia\r\n                    image={snippet?.thumbnails?.high?.url}\r\n                    alt={snippet?.title}\r\n                    sx={{ width: 358, height: 180 }}\r\n                />\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default VideoCard"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,EAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AACxE,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,gBAAgB,EAAEC,YAAY,EAAEC,cAAc,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtH,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK,EAAE;IAAEC,EAAE,EAAE;MAAEC;IAAQ,CAAC;IAAEC;EAAQ;AAAE,CAAC,KAAK;EAAA,IAAAC,mBAAA,EAAAC,qBAAA;EAE3D,oBACIP,OAAA,CAACV,IAAI;IAAAkB,QAAA,eACDR,OAAA,CAACZ,IAAI;MAACqB,EAAE,EAAEL,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAGT,YAAa;MAAAa,QAAA,eACnDR,OAAA,CAACR,SAAS;QACNkB,KAAK,EAAEL,OAAO,aAAPA,OAAO,wBAAAC,mBAAA,GAAPD,OAAO,CAAEM,UAAU,cAAAL,mBAAA,wBAAAC,qBAAA,GAAnBD,mBAAA,CAAqBM,IAAI,cAAAL,qBAAA,uBAAzBA,qBAAA,CAA2BM,GAAI;QACtCC,GAAG,EAAET,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,KAAM;QACpBC,EAAE,EAAE;UAAEC,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf,CAAC;AAAAC,EAAA,GAbKtB,SAAS;AAef,eAAeA,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}